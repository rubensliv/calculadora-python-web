#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Calculadora em Python
Uma calculadora simples com opera√ß√µes b√°sicas e avan√ßadas
"""

import math
import sys


def exibir_menu():
    """Exibe o menu principal da calculadora"""
    print("\n" + "="*50)
    print("           CALCULADORA PYTHON")
    print("="*50)
    print("1. Soma (+)")
    print("2. Subtra√ß√£o (-)")
    print("3. Multiplica√ß√£o (*)")
    print("4. Divis√£o (/)")
    print("5. Pot√™ncia (^)")
    print("6. Raiz Quadrada (‚àö)")
    print("7. Seno")
    print("8. Cosseno")
    print("9. Tangente")
    print("10. Logaritmo")
    print("11. Fatorial")
    print("0. Sair")
    print("="*50)


def obter_numero(mensagem):
    """Obt√©m um n√∫mero v√°lido do usu√°rio"""
    while True:
        try:
            numero = float(input(mensagem))
            return numero
        except ValueError:
            print("‚ùå Erro: Digite um n√∫mero v√°lido!")
        except KeyboardInterrupt:
            print("\n\nüëã Calculadora encerrada pelo usu√°rio.")
            sys.exit(0)


def obter_numero_positivo(mensagem):
    """Obt√©m um n√∫mero positivo v√°lido do usu√°rio"""
    while True:
        numero = obter_numero(mensagem)
        if numero >= 0:
            return numero
        print("‚ùå Erro: O n√∫mero deve ser positivo!")


def somar(numero_a, numero_b):
    """Realiza a opera√ß√£o de soma"""
    return numero_a + numero_b


def subtrair(numero_a, numero_b):
    """Realiza a opera√ß√£o de subtra√ß√£o"""
    return numero_a - numero_b


def multiplicar(numero_a, numero_b):
    """Realiza a opera√ß√£o de multiplica√ß√£o"""
    return numero_a * numero_b


def dividir(numero_a, numero_b):
    """Realiza a opera√ß√£o de divis√£o"""
    if numero_b == 0:
        raise ValueError("‚ùå Erro: Divis√£o por zero n√£o √© permitida!")
    return numero_a / numero_b


def potencia(base, expoente):
    """Calcula a pot√™ncia"""
    return base ** expoente


def raiz_quadrada(numero):
    """Calcula a raiz quadrada"""
    if numero < 0:
        raise ValueError("‚ùå Erro: N√£o √© poss√≠vel calcular raiz quadrada de n√∫mero negativo!")
    return math.sqrt(numero)


def seno(angulo_graus):
    """Calcula o seno de um √¢ngulo em graus"""
    return math.sin(math.radians(angulo_graus))


def cosseno(angulo_graus):
    """Calcula o cosseno de um √¢ngulo em graus"""
    return math.cos(math.radians(angulo_graus))


def tangente(angulo_graus):
    """Calcula a tangente de um √¢ngulo em graus"""
    return math.tan(math.radians(angulo_graus))


def logaritmo(numero):
    """Calcula o logaritmo natural"""
    if numero <= 0:
        raise ValueError("‚ùå Erro: Logaritmo s√≥ √© definido para n√∫meros positivos!")
    return math.log(numero)


def fatorial(numero):
    """Calcula o fatorial de um n√∫mero"""
    if numero < 0:
        raise ValueError("‚ùå Erro: Fatorial n√£o √© definido para n√∫meros negativos!")
    if not numero.is_integer():
        raise ValueError("‚ùå Erro: Fatorial s√≥ √© definido para n√∫meros inteiros!")
    return math.factorial(int(numero))


def executar_operacao_basica(escolha):
    """Executa opera√ß√µes b√°sicas que precisam de dois n√∫meros"""
    numero_a = obter_numero("Digite o primeiro n√∫mero: ")
    numero_b = obter_numero("Digite o segundo n√∫mero: ")

    if escolha == 1:  # Soma
        resultado = somar(numero_a, numero_b)
        print(f"‚úÖ Resultado: {numero_a} + {numero_b} = {resultado}")
    elif escolha == 2:  # Subtra√ß√£o
        resultado = subtrair(numero_a, numero_b)
        print(f"‚úÖ Resultado: {numero_a} - {numero_b} = {resultado}")
    elif escolha == 3:  # Multiplica√ß√£o
        resultado = multiplicar(numero_a, numero_b)
        print(f"‚úÖ Resultado: {numero_a} √ó {numero_b} = {resultado}")
    elif escolha == 4:  # Divis√£o
        resultado = dividir(numero_a, numero_b)
        print(f"‚úÖ Resultado: {numero_a} √∑ {numero_b} = {resultado}")


def executar_operacao_avancada(escolha):
    """Executa opera√ß√µes avan√ßadas"""
    if escolha == 5:  # Pot√™ncia
        base = obter_numero("Digite a base: ")
        expoente = obter_numero("Digite o expoente: ")
        resultado = potencia(base, expoente)
        print(f"‚úÖ Resultado: {base}^{expoente} = {resultado}")
    elif escolha == 6:  # Raiz quadrada
        numero = obter_numero_positivo("Digite o n√∫mero: ")
        resultado = raiz_quadrada(numero)
        print(f"‚úÖ Resultado: ‚àö{numero} = {resultado}")
    elif escolha == 7:  # Seno
        angulo = obter_numero("Digite o √¢ngulo em graus: ")
        resultado = seno(angulo)
        print(f"‚úÖ Resultado: sen({angulo}¬∞) = {resultado}")
    elif escolha == 8:  # Cosseno
        angulo = obter_numero("Digite o √¢ngulo em graus: ")
        resultado = cosseno(angulo)
        print(f"‚úÖ Resultado: cos({angulo}¬∞) = {resultado}")
    elif escolha == 9:  # Tangente
        angulo = obter_numero("Digite o √¢ngulo em graus: ")
        resultado = tangente(angulo)
        print(f"‚úÖ Resultado: tan({angulo}¬∞) = {resultado}")
    elif escolha == 10:  # Logaritmo
        numero = obter_numero_positivo("Digite o n√∫mero: ")
        resultado = logaritmo(numero)
        print(f"‚úÖ Resultado: ln({numero}) = {resultado}")
    elif escolha == 11:  # Fatorial
        numero = obter_numero("Digite um n√∫mero inteiro: ")
        resultado = fatorial(numero)
        print(f"‚úÖ Resultado: {int(numero)}! = {resultado}")


def executar_operacao(escolha):
    """Executa a opera√ß√£o selecionada"""
    try:
        if 1 <= escolha <= 4:
            executar_operacao_basica(escolha)
        elif 5 <= escolha <= 11:
            executar_operacao_avancada(escolha)

    except ValueError as error:
        print(str(error))
    except ArithmeticError as error:
        print(f"‚ùå Erro matem√°tico: {error}")


def main():
    """Fun√ß√£o principal da calculadora"""
    print("üöÄ Bem-vindo √† Calculadora Python!")

    while True:
        try:
            exibir_menu()
            escolha = input("\nEscolha uma op√ß√£o (0-11): ").strip()

            if escolha == '0':
                print("\nüëã Obrigado por usar a Calculadora Python!")
                break
            if escolha.isdigit() and 1 <= int(escolha) <= 11:
                executar_operacao(int(escolha))
            else:
                print("‚ùå Op√ß√£o inv√°lida! Escolha um n√∫mero de 0 a 11.")

            input("\n‚è∏Ô∏è  Pressione Enter para continuar...")

        except KeyboardInterrupt:
            print("\n\nüëã Calculadora encerrada pelo usu√°rio.")
            break
        except (ValueError, ArithmeticError) as error:
            print(f"‚ùå Erro: {error}")
            input("\n‚è∏Ô∏è  Pressione Enter para continuar...")


if __name__ == "__main__":
    main()
